diff --git a/node_modules/better-sqlite3/binding.gyp b/node_modules/better-sqlite3/binding.gyp
index 59fa0a8..fe8d144 100644
--- a/node_modules/better-sqlite3/binding.gyp
+++ b/node_modules/better-sqlite3/binding.gyp
@@ -9,9 +9,10 @@
       'target_name': 'better_sqlite3',
       'dependencies': ['deps/sqlite3.gyp:sqlite3'],
       'sources': ['src/better_sqlite3.cpp'],
-      'cflags': ['-std=c++14'],
+      'cflags': ['-std=c++17'],
+      'cflags_cc': ['-std=c++17'],
       'xcode_settings': {
-        'OTHER_CPLUSPLUSFLAGS': ['-std=c++14', '-stdlib=libc++'],
+        'OTHER_CPLUSPLUSFLAGS': ['-std=c++17', '-stdlib=libc++'],
       },
       'conditions': [
         ['OS=="linux"', {
diff --git a/node_modules/better-sqlite3/build/Release/better_sqlite3.node b/node_modules/better-sqlite3/build/Release/better_sqlite3.node
deleted file mode 100755
index 5df7544..0000000
Binary files a/node_modules/better-sqlite3/build/Release/better_sqlite3.node and /dev/null differ
diff --git a/node_modules/better-sqlite3/src/better_sqlite3.cpp b/node_modules/better-sqlite3/src/better_sqlite3.cpp
index 777c8b8..0cfaf51 100644
--- a/node_modules/better-sqlite3/src/better_sqlite3.cpp
+++ b/node_modules/better-sqlite3/src/better_sqlite3.cpp
@@ -104,8 +104,7 @@ void SetPrototypeGetter (v8::Isolate * isolate, v8::Local <v8::External> data, v
                 0,
                 data,
                 v8::AccessControl::DEFAULT,
-                v8::PropertyAttribute::None,
-                v8::AccessorSignature::New(isolate, recv)
+                v8::PropertyAttribute::None
         );
 }
 #line 4 "./src/util/constants.lzz"
@@ -1949,7 +1948,7 @@ bool Binder::IsPlainObject (v8::Isolate * isolate, v8::Local <v8::Object> obj)
 #line 35 "./src/util/binder.lzz"
                                                                                    {
                 v8::Local<v8::Value> proto = obj->GetPrototype();
-                v8::Local<v8::Context> ctx = obj->CreationContext();
+                v8::Local<v8::Context> ctx = obj->GetCreationContext().ToLocalChecked();
                 ctx->Enter();
                 v8::Local<v8::Value> baseProto = v8::Object::New(isolate)->GetPrototype();
                 ctx->Exit();
